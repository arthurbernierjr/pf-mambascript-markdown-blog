{"content":"<h2 id=\"formhandling\">Form Handling</h2>\n<p>There are two ways to handle forms in React.</p>\n<ul>\n<li><p><strong>Controlled Forms:</strong> The value of the inputs are bound to state, so value of state and the value of the inputs are always in sync.</p></li>\n<li><p><strong>Uncontrolled Forms:</strong> The forms are not bound by state, instead their values are pulled using a ref when needed.</p></li>\n</ul>\n<h3 id=\"exampleofacontrolledform\">Example of a Controlled Form</h3>\n<p>Parts:</p>\n<ul>\n<li>object holding form values as state</li>\n<li>handleChange function that updates the state when we type into the form</li>\n<li>handleSubmit function to handle form submission and do what you want with the data</li>\n</ul>\n<pre><code class=\"js language-js\">import { useState } from \"react\"\n\nexport default function Form(props) {\n  //State to hold the form data\n  const [form, setForm] = useState({\n    name: \"\",\n    age: 0,\n  })\n\n  // handleChange function\n  const handleChange = event =&gt; {\n    // dynamically update the state using the event object\n    // this function always looks the same\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const handleSubmit = event =&gt; {\n    // prevent page refresh\n    event.preventDefault()\n    // do what you want with the form data\n    console.log(form)\n  }\n\n  // The JSX for the form binding the functions and state to our inputs\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;input\n        type=\"text\"\n        value={form.name}\n        onChange={handleChange}\n        name=\"name\"\n        placeholder=\"write name here\"\n      /&gt;\n      &lt;input\n        type=\"number\"\n        value={form.age}\n        onChange={handleChange}\n        name=\"age\"\n        placeholder=\"write age here\"\n      /&gt;\n      &lt;input type=\"submit\" value=\"Submit Form\" /&gt;\n    &lt;/form&gt;\n  )\n}\n</code></pre>\n<h3 id=\"exampleofanuncontrolledform\">Example of an Uncontrolled Form</h3>\n<ul>\n<li>a ref created for each input</li>\n<li>handleSubmit for when form is submitted</li>\n</ul>\n<pre><code class=\"js language-js\">import { useRef } from \"react\"\n\nexport default function Form(props) {\n  // ref to get input values\n  const nameInput = useRef(null)\n  const ageInput = useRef(null)\n\n  const handleSubmit = event =&gt; {\n    // prevent page refresh\n    event.preventDefault()\n    // do what you want with the form data\n    console.log({\n      name: nameInput.current.value,\n      age: ageInput.current.value,\n    })\n  }\n\n  // The JSX for the form binding the functions and state to our inputs\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;input type=\"text\" ref={nameInput} placeholder=\"write name here\" /&gt;\n      &lt;input type=\"number\" ref={ageInput} placeholder=\"write age here\" /&gt;\n      &lt;input type=\"submit\" value=\"Submit Form\" /&gt;\n    &lt;/form&gt;\n  )\n}\n</code></pre>\n<h2 id=\"part1makingtheapiconnectingittoareactapp\">Part 1 Making The API &amp; Connecting it to a React App</h2>\n<p><img src=\"/img/3.png\" alt=\"\" /></p>\n<h2 id=\"part2usingcomponentstoproperlyseparateconcerns\">Part 2 Using Components to Properly Separate Concerns</h2>\n<p><img src=\"/img/4.png\" alt=\"\" /></p>\n<h2 id=\"part3usingcssmodulestoproperlystylecomponents\">Part 3 Using CSS Modules to Properly Style Components</h2>\n<p><img src=\"/img/5.png\" alt=\"\" /></p>","data":{"title":"Bookmarks MERN","subTitle":"Building A Simple Full Crud MERN App","excerpt":"I want to be the best. I want to be the best simple and plain, thats what drives me - Kobe Bryant","featureImage":"/img/3.png","date":"12/25/22","order":2},"isEmpty":false,"excerpt":"","path":"/home/bigpoppacode/code/bigpoppacode.io/api/bookmarks-mern.md","_id":"bookmarks-mern"}